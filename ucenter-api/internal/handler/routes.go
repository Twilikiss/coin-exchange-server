// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"ucenter-api/internal/midd"
	"ucenter-api/internal/svc"
)

func RegisterHandlers(r *Routers, serverCtx *svc.ServiceContext) {
	// 注册路由
	registerHandler := RegisterHandler(serverCtx)
	sendCode := SendCodeHandler(serverCtx)

	registerGroup := r.Group()
	registerGroup.Post("/uc/register/phone", registerHandler)
	registerGroup.Post("/uc/mobile/code", sendCode)

	// 登录相关的路由
	loginHandler := LoginHandler(serverCtx)
	checkLogin := CheckLogin(serverCtx)

	loginGroup := r.Group()
	loginGroup.Post("/uc/login", loginHandler)
	loginGroup.Post("/uc/check/login", checkLogin)

	// 用户相关操作的路由
	findWalletBySymbolHandler := FindWalletBySymbolHandler(serverCtx)
	findWallet := FindWallet(serverCtx)
	resetAddr := RestAddress(serverCtx)
	findTransaction := FindAllTransaction(serverCtx)

	assetGroup := r.Group()
	// 添加JWT登录校验中间件
	assetGroup.Use(midd.Auth(serverCtx.Config.JWT.AccessSecret))
	assetGroup.Post("/uc/asset/wallet/:coinName", findWalletBySymbolHandler)
	assetGroup.Post("/uc/asset/wallet", findWallet)
	assetGroup.Post("/uc/asset/wallet/reset-address", resetAddr)
	assetGroup.Post("/uc/asset/transaction/all", findTransaction)

	approveGroup := r.Group()
	approve := GetSecuritySetting(serverCtx)
	approveGroup.Use(midd.Auth(serverCtx.Config.JWT.AccessSecret))
	approveGroup.Post("/uc/approve/security/setting", approve)

	withdrawGroup := r.Group()
	qwc := QueryWithdrawCoin(serverCtx)
	sc := SendCode(serverCtx)
	wc := WithdrawCode(serverCtx)
	record := Record(serverCtx)
	withdrawGroup.Use(midd.Auth(serverCtx.Config.JWT.AccessSecret))
	withdrawGroup.Post("/uc/withdraw/support/coin/info", qwc)
	withdrawGroup.Post("/uc/mobile/withdraw/code", sc)
	withdrawGroup.Post("/uc/withdraw/apply/code", wc)
	withdrawGroup.Post("/uc/withdraw/record", record)
}
